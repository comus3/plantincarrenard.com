name: Update startTime and Blog Posts List

on:
  push:
    branches:
      - main  # Trigger this workflow only when there's a push to the 'main' branch

jobs:
  update_start_time_and_posts:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the code
      uses: actions/checkout@v3

    - name: Check if trigram_daily_update is in commit message
      run: |
        # Get the commit message
        COMMIT_MESSAGE=$(git log -1 --pretty=%B)
        
        # Check if trigram_daily_update is in the commit message
        if [[ "$COMMIT_MESSAGE" == *"trigram_daily_update"* ]]; then
          echo "Skipping startTime update, trigram update detected."
          exit 0
        fi

    - name: Update startTime in script.js
      run: |
        # Get current date in the desired format (ISO 8601 format)
        current_time=$(date --utc +'%Y-%m-%dT%H:%M:%SZ')

        # Use sed to replace the startTime in the script.js file with the current time
        sed -i "s/const startTime = new Date(\"[^\"]*\");/const startTime = new Date(\"$current_time\");/" script.js

    - name: Commit startTime update
      run: |
        git config user.name "comus3"
        git config user.email "come.plantin.carrenard@gmail.com"
        git add .
        git commit -m "Update startTime in script.js"

    - name: Generate new posts array and update posts.js
      run: |
        # Find all .html files in the blog_posts directory and sort them
        posts=$(find blog_posts -name "*.html" | sort)

        # Start the posts array
        echo "const posts = [" > posts.json

        # Loop through each post file and add it to the array
        for post in $posts; do
          # Get the title by removing the 'blog_posts/' prefix and '.html' suffix
          title=$(basename "$post" .html)

          # Get the last modified and creation dates
          last_modified=$(stat -c %y "$post")
          created_date=$(stat -c %W "$post")

          # Format the date for JS (remove the timezone part for simplicity)
          last_modified="${last_modified%% *}"
          created_date="${created_date:-$last_modified}"  # If creation date is unavailable, fallback to modification date

          # Add the post with dates to the array
          echo "  { title: \"$title\", url: \"blog_posts/$title.html\", last_modified: \"$last_modified\", created: \"$created_date\" }," >> posts.json
        done
        >> posts.json

    - name: Commit blog posts list update
      run: |
        git config user.name "comus3"
        git config user.email "come.plantin.carrenard@gmail.com"
        git add .
        git commit -m "Update blog posts list"

    - name: Push changes to main
      run: |
        git push https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }}.git HEAD:main
